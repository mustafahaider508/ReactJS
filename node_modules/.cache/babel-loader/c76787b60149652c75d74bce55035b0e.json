{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/ReactCourse/react-course/src/Components/WeatherApp/temp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Weathercard from \"./Weathercard\";\nimport \"./temp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Temp = () => {\n  _s();\n\n  const [input, setinput] = useState(\"\");\n  const [tempInfo, setTempInfo] = useState({});\n\n  const WeatherInfo = async () => {\n    try {\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${input}&units=metric&appid=dccc147924a249b664ad69142ad0396b`;\n      let res = await fetch(url);\n      let data = await res.json(); // console.log(data);\n\n      const {\n        temp,\n        pressure,\n        humidity\n      } = data.main;\n      const {\n        main: weathermood\n      } = data.weather[0];\n      const {\n        name\n      } = data;\n      const {\n        speed\n      } = data.wind;\n      const {\n        country,\n        sunset\n      } = data.sys;\n      const newData = {\n        country,\n        temp,\n        pressure,\n        humidity,\n        weathermood,\n        name,\n        speed,\n        sunset\n      };\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"search...\",\n          autoFocus: true,\n          id: \"search\",\n          className: \"searchTerm\",\n          value: input,\n          onChange: e => setinput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"searchButton\",\n          type: \"button\",\n          onClick: WeatherInfo,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Weathercard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Temp, \"ATMQa7qN6vE9jH7d8awdLGaErtQ=\");\n\n_c = Temp;\nexport default Temp;\n\nvar _c;\n\n$RefreshReg$(_c, \"Temp\");","map":{"version":3,"sources":["/Users/mac/Desktop/ReactCourse/react-course/src/Components/WeatherApp/temp.js"],"names":["React","useState","useEffect","Weathercard","Temp","input","setinput","tempInfo","setTempInfo","WeatherInfo","url","res","fetch","data","json","temp","pressure","humidity","main","weathermood","weather","name","speed","wind","country","sunset","sys","newData","error","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,YAAP;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBL,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMQ,WAAW,GAAG,YAAW;AAC3B,QAAI;AACA,UAAIC,GAAG,GAAI,qDAAoDL,KAAM,sDAArE;AACA,UAAIM,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAArB;AACA,UAAIG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAjB,CAHA,CAIA;;AAGA,YAAM;AAACC,QAAAA,IAAD;AAAMC,QAAAA,QAAN;AAAeC,QAAAA;AAAf,UAA2BJ,IAAI,CAACK,IAAtC;AACA,YAAM;AAAEA,QAAAA,IAAI,EAAEC;AAAR,UAAwBN,IAAI,CAACO,OAAL,CAAa,CAAb,CAA9B;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAWR,IAAjB;AACA,YAAM;AAAES,QAAAA;AAAF,UAAYT,IAAI,CAACU,IAAvB;AACA,YAAM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAsBZ,IAAI,CAACa,GAAjC;AAEA,YAAMC,OAAO,GAAG;AACZH,QAAAA,OADY;AACJT,QAAAA,IADI;AACCC,QAAAA,QADD;AACUC,QAAAA,QADV;AACmBE,QAAAA,WADnB;AAC+BE,QAAAA,IAD/B;AACoCC,QAAAA,KADpC;AAC0CG,QAAAA;AAD1C,OAAhB;AAKH,KAlBD,CAkBE,OAAOG,KAAP,EAAc,CAEf;AAEJ,GAvBD;;AA4BF,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,WAAW,EAAC,WAFd;AAGE,UAAA,SAAS,MAHX;AAIE,UAAA,EAAE,EAAC,QAJL;AAKE,UAAA,SAAS,EAAC,YALZ;AAME,UAAA,KAAK,EAAEvB,KANT;AAOE,UAAA,QAAQ,EAAGwB,CAAD,IAAOvB,QAAQ,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV;AAP3B;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,OAAO,EAAEtB,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eA0BE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA,kBADF;AA8BD,CA/DD;;GAAML,I;;KAAAA,I;AAiEN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Weathercard from \"./Weathercard\";\nimport \"./temp.css\";\n\nconst Temp = () => {\n\n    const [input,setinput] = useState(\"\");\n    const [tempInfo, setTempInfo] = useState({});\n\n    const WeatherInfo = async() => {\n        try {\n            let url = `https://api.openweathermap.org/data/2.5/weather?q=${input}&units=metric&appid=dccc147924a249b664ad69142ad0396b`\n            let res = await fetch(url);\n            let data = await res.json();\n            // console.log(data);\n\n        \n            const {temp,pressure,humidity} = data.main;\n            const { main: weathermood } = data.weather[0];\n            const { name } = data;\n            const { speed } = data.wind;\n            const { country, sunset } = data.sys;\n                \n            const newData = {\n                country,temp,pressure,humidity,weathermood,name,speed,sunset,\n            }\n\n\n        } catch (error) {\n            \n        }\n\n    }\n  \n\n  \n\n  return (\n    <>\n      <div className=\"wrap\">\n        <div className=\"search\">\n          <input\n            type=\"search\"\n            placeholder=\"search...\"\n            autoFocus\n            id=\"search\"\n            className=\"searchTerm\"\n            value={input}\n            onChange={(e) => setinput(e.target.value)}\n        \n        \n            \n          />\n\n          <button\n            className=\"searchButton\"\n            type=\"button\"\n            onClick={WeatherInfo}>\n            Search\n          </button>\n        </div>\n      </div>\n\n      {/* our temp card  */}\n      <Weathercard  />\n    </>\n  );\n};\n\nexport default Temp;"]},"metadata":{},"sourceType":"module"}