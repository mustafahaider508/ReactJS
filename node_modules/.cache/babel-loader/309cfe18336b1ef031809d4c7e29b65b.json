{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/ReactCourse/react-course/src/Components/Hooks/StopWatch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useRef } from 'react';\nimport \"./Style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"start\":\n      return { ...state,\n        isRunning: true\n      };\n\n    case \"stop\":\n      return { ...state,\n        isRunning: false\n      };\n\n    case \"reset\":\n      return {\n        isRunning: false,\n        time: 0\n      };\n\n    case \"tick\":\n      return { ...state,\n        time: state.time + 1\n      };\n\n    default:\n      throw new Error();\n  }\n}\n\nfunction StopWatch() {\n  _s();\n\n  const initialState = {\n    isRunning: false,\n    time: 0\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const idRef = useRef(0);\n  useEffect(() => {\n    if (!state.isRunning) {\n      return;\n    }\n\n    idRef.current = setInterval(() => dispatch({\n      type: \"tick\"\n    }), 1000);\n    return () => {\n      clearInterval(idRef.current);\n      idRef.current = 0;\n    };\n  }, [state.isRunning]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"  \", state.time, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"button2\",\n        onClick: () => dispatch({\n          type: \"Start\"\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), \"START\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"button2\",\n        onClick: () => dispatch({\n          type: \"Stop\"\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), \"DECR\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(StopWatch, \"nHeWZQF70i6gi74f4bV5sAt74eU=\");\n\n_c = StopWatch;\nexport default StopWatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"StopWatch\");","map":{"version":3,"sources":["/Users/mac/Desktop/ReactCourse/react-course/src/Components/Hooks/StopWatch.js"],"names":["React","useEffect","useReducer","useRef","reducer","state","action","type","isRunning","time","Error","StopWatch","initialState","dispatch","idRef","current","setInterval","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAsCC,MAAtC,QAAoD,OAApD;AACA,OAAO,aAAP;;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACF,SAAK,MAAL;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYG,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACF,SAAK,OAAL;AACE,aAAO;AAAEA,QAAAA,SAAS,EAAE,KAAb;AAAoBC,QAAAA,IAAI,EAAE;AAA1B,OAAP;;AACF,SAAK,MAAL;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYI,QAAAA,IAAI,EAAEJ,KAAK,CAACI,IAAN,GAAa;AAA/B,OAAP;;AACF;AACE,YAAM,IAAIC,KAAJ,EAAN;AAVJ;AAYD;;AAGH,SAASC,SAAT,GAAqB;AAAA;;AACpB,QAAMC,YAAY,GAAG;AAACJ,IAAAA,SAAS,EAAC,KAAX;AAAiBC,IAAAA,IAAI,EAAC;AAAtB,GAArB;AACI,QAAM,CAACJ,KAAD,EAAQQ,QAAR,IAAoBX,UAAU,CAACE,OAAD,EAAUQ,YAAV,CAApC;AACA,QAAME,KAAK,GAAGX,MAAM,CAAC,CAAD,CAApB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACb,QAAI,CAACI,KAAK,CAACG,SAAX,EAAsB;AACpB;AACD;;AACDM,IAAAA,KAAK,CAACC,OAAN,GAAgBC,WAAW,CAAC,MAAMH,QAAQ,CAAC;AAAEN,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAf,EAAmC,IAAnC,CAA3B;AACA,WAAO,MAAM;AACXU,MAAAA,aAAa,CAACH,KAAK,CAACC,OAAP,CAAb;AACAD,MAAAA,KAAK,CAACC,OAAN,GAAgB,CAAhB;AACD,KAHD;AAID,GATO,EASL,CAACV,KAAK,CAACG,SAAP,CATK,CAAT;AAYD,sBACI;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACA;AAAA,yBAAMH,KAAK,CAACI,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAK,QAAA,KAAK,EAAC,SAAX;AAAqB,QAAA,OAAO,EAAE,MAAMI,QAAQ,CAAC;AAACN,UAAAA,IAAI,EAAC;AAAN,SAAD,CAA5C;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eASA;AACE,QAAA,KAAK,EAAC,SADR;AACkB,QAAA,OAAO,EAAE,MAAMM,QAAQ,CAAC;AAACN,UAAAA,IAAI,EAAC;AAAN,SAAD,CADzC;AAAA,gCAKE;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cATA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AA0BH;;GA3CQI,S;;KAAAA,S;AA6CT,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useReducer,useRef } from 'react';\nimport \"./Style.css\";\n\nfunction reducer(state, action) {\n    switch (action.type) {\n      case \"start\":\n        return { ...state, isRunning: true };\n      case \"stop\":\n        return { ...state, isRunning: false };\n      case \"reset\":\n        return { isRunning: false, time: 0 };\n      case \"tick\":\n        return { ...state, time: state.time + 1 };\n      default:\n        throw new Error();\n    }\n  }\n  \n\nfunction StopWatch() {\n const initialState = {isRunning:false,time:0,}\n     const [state, dispatch] = useReducer(reducer, initialState);\n     const idRef = useRef(0);\n\n     useEffect(() => {\n        if (!state.isRunning) {\n          return;\n        }\n        idRef.current = setInterval(() => dispatch({ type: \"tick\" }), 1000);\n        return () => {\n          clearInterval(idRef.current);\n          idRef.current = 0;\n        };\n      }, [state.isRunning]);\n    \n     \n    return (\n        <>\n        <div className=\"center_div\">\n        <p>  {state.time}s</p>\n        <div class=\"button2\" onClick={() => dispatch({type:\"Start\"})} >\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          START\n        </div>\n        <div\n          class=\"button2\" onClick={() => dispatch({type:\"Stop\"})}\n            \n          \n          >\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          DECR\n        </div>\n      </div>\n            \n        </>\n    )\n}\n\nexport default StopWatch\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}