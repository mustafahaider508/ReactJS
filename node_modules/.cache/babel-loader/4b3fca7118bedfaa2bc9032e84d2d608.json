{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/ReactCourse/react-course/src/Components/Hooks/StopWatch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useRef } from 'react';\nimport \"./Style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  if (action.type === 'start') {\n    state = { ...state,\n      isRunning: true\n    };\n  }\n\n  if (action.type === 'stop') {\n    state = { ...state,\n      isRunning: false\n    };\n  }\n\n  if (action.type === 'reset') {\n    state = {\n      isRunning: false,\n      count: 0\n    };\n  }\n\n  if (action.type === 'tick') {\n    state = { ...state,\n      time: state.time + 1\n    };\n  }\n\n  return state;\n};\n\nfunction StopWatch() {\n  _s();\n\n  const initialState = {\n    isRunning: false,\n    count: 0\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const idRef = useRef(0);\n  useEffect(() => {\n    if (!state.isRunning) {\n      return;\n    }\n\n    idRef.current = setInterval(() => dispatch({\n      type: 'tick'\n    }), 1000);\n    return () => {\n      clearInterval(idRef.current);\n      idRef.current = 0;\n    };\n  }, [state.isRunning]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Count: \", state.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"button2\",\n        onClick: () => dispatch({\n          type: \"Start\"\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), \"INCR\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"button2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), \"DECR\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(StopWatch, \"nHeWZQF70i6gi74f4bV5sAt74eU=\");\n\n_c = StopWatch;\nexport default StopWatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"StopWatch\");","map":{"version":3,"sources":["/Users/mac/Desktop/ReactCourse/react-course/src/Components/Hooks/StopWatch.js"],"names":["React","useEffect","useReducer","useRef","reducer","state","action","type","isRunning","count","time","StopWatch","initialState","dispatch","idRef","current","setInterval","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAsCC,MAAtC,QAAoD,OAApD;AACA,OAAO,aAAP;;;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAiB;AAC7B,MAAGA,MAAM,CAACC,IAAP,KAAgB,OAAnB,EAA4B;AACxBF,IAAAA,KAAK,GAAG,EAAC,GAAGA,KAAJ;AAAUG,MAAAA,SAAS,EAAE;AAArB,KAAR;AACH;;AACD,MAAGF,MAAM,CAACC,IAAP,KAAgB,MAAnB,EAA2B;AACvBF,IAAAA,KAAK,GAAG,EAAC,GAAGA,KAAJ;AAAUG,MAAAA,SAAS,EAAE;AAArB,KAAR;AACH;;AACD,MAAGF,MAAM,CAACC,IAAP,KAAgB,OAAnB,EAA4B;AACxBF,IAAAA,KAAK,GAAG;AAACG,MAAAA,SAAS,EAAE,KAAZ;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAAR;AACH;;AACD,MAAGH,MAAM,CAACC,IAAP,KAAgB,MAAnB,EAA2B;AACvBF,IAAAA,KAAK,GAAG,EAAE,GAAGA,KAAL;AAAYK,MAAAA,IAAI,EAAEL,KAAK,CAACK,IAAN,GAAa;AAA/B,KAAR;AACH;;AAED,SAAOL,KAAP;AACH,CAfD;;AAiBA,SAASM,SAAT,GAAqB;AAAA;;AACpB,QAAMC,YAAY,GAAG;AAACJ,IAAAA,SAAS,EAAC,KAAX;AAAiBC,IAAAA,KAAK,EAAC;AAAvB,GAArB;AACI,QAAM,CAACJ,KAAD,EAAQQ,QAAR,IAAoBX,UAAU,CAACE,OAAD,EAAUQ,YAAV,CAApC;AACA,QAAME,KAAK,GAAGX,MAAM,CAAC,CAAD,CAApB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACb,QAAI,CAACI,KAAK,CAACG,SAAX,EAAsB;AAClB;AACD;;AACDM,IAAAA,KAAK,CAACC,OAAN,GAAgBC,WAAW,CAAC,MAAMH,QAAQ,CAAC;AAACN,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAf,EAAiC,IAAjC,CAA3B;AACN,WAAO,MAAM;AACXU,MAAAA,aAAa,CAACH,KAAK,CAACC,OAAP,CAAb;AACAD,MAAAA,KAAK,CAACC,OAAN,GAAgB,CAAhB;AACD,KAHD;AAKE,GAVQ,EAUP,CAACV,KAAK,CAACG,SAAP,CAVO,CAAT;AAYD,sBACI;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACA;AAAA,+BAAYH,KAAK,CAACI,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAK,QAAA,KAAK,EAAC,SAAX;AAAqB,QAAA,OAAO,EAAE,MAAMI,QAAQ,CAAC;AAACN,UAAAA,IAAI,EAAC;AAAN,SAAD,CAA5C;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eASA;AACE,QAAA,KAAK,EAAC,SADR;AAAA,gCAKE;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cATA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AA0BH;;GA3CQI,S;;KAAAA,S;AA6CT,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useReducer,useRef } from 'react';\nimport \"./Style.css\";\n\n\n\nconst reducer = (state,action) =>{\n    if(action.type === 'start') {\n        state = {...state,isRunning: true};\n    }\n    if(action.type === 'stop') {\n        state = {...state,isRunning: false};\n    }\n    if(action.type === 'reset') {\n        state = {isRunning: false,count: 0 };\n    }\n    if(action.type === 'tick') {\n        state = { ...state, time: state.time + 1 };\n    }\n\n    return state;\n}\n\nfunction StopWatch() {\n const initialState = {isRunning:false,count:0,}\n     const [state, dispatch] = useReducer(reducer, initialState);\n     const idRef = useRef(0);\n\n     useEffect(() => {\n        if (!state.isRunning) { \n            return; \n          }\n          idRef.current = setInterval(() => dispatch({type: 'tick'}), 1000);\n    return () => {\n      clearInterval(idRef.current);\n      idRef.current = 0;\n    };\n\n     },[state.isRunning])\n     \n    return (\n        <>\n        <div className=\"center_div\">\n        <p> Count: {state.count}</p>\n        <div class=\"button2\" onClick={() => dispatch({type:\"Start\"})} >\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          INCR\n        </div>\n        <div\n          class=\"button2\" \n            \n          \n          >\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          DECR\n        </div>\n      </div>\n            \n        </>\n    )\n}\n\nexport default StopWatch\n"]},"metadata":{},"sourceType":"module"}